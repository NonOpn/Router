"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var /* string */ dec2Hex = function (n) {
    if (n < 0)
        n = 0xFFFFFFFF + n + 1;
    var number = n.toString(16).toUpperCase();
    if (number.length & 1)
        number = "0" + number;
    return number;
};
var /* String */ arrayToHex = function (array) {
    var log = "";
    var k;
    for (k = 0; k < array.length; k++)
        log += dec2Hex(array[k]);
    return log;
};
function ESP3HeaderCRC(h) {
    var u8CRC = 0;
    u8CRC = proccrc8(u8CRC, h[1]);
    u8CRC = proccrc8(u8CRC, h[2]);
    u8CRC = proccrc8(u8CRC, h[3]);
    u8CRC = proccrc8(u8CRC, h[4]);
    return u8CRC;
}
function ESP3DataCRC(h) {
    var u8CRC = 0;
    var i = 0;
    for (; i < h.length; i++) {
        u8CRC = proccrc8(u8CRC, h[i]);
    }
    return u8CRC;
}
function proccrc8(CRC, u8Data) {
    return CRC8Table[(CRC ^ u8Data) & 0xff];
}
var CRC8Table = [
    0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15,
    0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,
    0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65,
    0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,
    0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5,
    0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,
    0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85,
    0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,
    0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2,
    0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,
    0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2,
    0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,
    0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32,
    0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,
    0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42,
    0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,
    0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c,
    0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,
    0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec,
    0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,
    0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c,
    0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,
    0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c,
    0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,
    0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b,
    0x76, 0x71, 0x78, 0x7f, 0x6A, 0x6d, 0x64, 0x63,
    0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b,
    0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,
    0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb,
    0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8D, 0x84, 0x83,
    0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb,
    0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3
];
function buildTelegram(packetType, data, optionaldata) {
    // var on  = [0x55,0x00,0x07,0x07,0x01,0x7A,0xF6,0x50,0x00,0x8B,0xE4,0xA9,0x30,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x53]; // ol 2014.07.21 :  ASSOCIATION & TURN ON
    var h = [];
    var m = [];
    h.push(0x55); // sync
    h.push(0x00); // Data Length
    h.push(data.length); // Data Length
    h.push(optionaldata.length); // Optional Length
    h.push(packetType); // Packet Type
    h.push(ESP3HeaderCRC(h)); // CRC8H
    var i;
    for (i = 0; i < data.length; i++) {
        m.push(data[i]);
    }
    var j;
    for (j = 0; j < optionaldata.length; j++) {
        m.push(optionaldata[j]);
    }
    m.push(ESP3DataCRC(m)); // CRC8H
    i = 0;
    for (; i < m.length; i++)
        h.push(m[i]);
    return h;
}
class EnoceanSend {
    buildTelegram(packetType, data, optionaldata) {
        return buildTelegram(packetType, data, optionaldata);
    }
    arrayToHex(array) {
        return arrayToHex(array);
    }
    createOptionalData(destination) {
        const packetType = 0x1; //RADIO;
        var optData = [];
        optData.push(0x03);
        /*
        * Destination ID intero this.optData[1] = (byte) (destinationId &
        * 0xff); this.optData[2] = (byte) ((destinationId & 0xff00)>>8);
        * this.optData[3] = (byte) ((destinationId & 0xff0000)>>16);
        * this.optData[4] = (byte) ((destinationId & 0xff000000)>>32);
        */
        var destinationId = new Buffer(destination, "hex");
        optData.push(destinationId[0]);
        optData.push(destinationId[1]);
        optData.push(destinationId[2]);
        optData.push(destinationId[3]);
        optData.push(0xFF);
        optData.push(0);
        return optData;
    }
}
exports.default = EnoceanSend;
//# sourceMappingURL=enocean_send.js.map